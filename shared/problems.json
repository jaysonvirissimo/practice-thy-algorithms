{
  "two_sum": {
    "title": "Two Sum",
    "description": "Given an array of integers, return all pairs that sum up to a specified value k. List the pairs in [min, max] order.",
    "complexity": "O(n)",
    "parameters": [
      {
        "name": "array",
        "type": "array<integer>",
        "description": "Array of integers"
      },
      {
        "name": "k",
        "type": "integer",
        "description": "Target sum"
      }
    ],
    "returnType": {
      "javascript": "array<array<integer>>",
      "ruby": "set<array<integer>>",
      "python": "list<tuple<integer>>"
    },
    "functionSignatures": {
      "javascript": "function twoSum(numbers, k)",
      "ruby": "def two_sum(array, k)",
      "python": "def two_sum(array, k)"
    },
    "testCases": [
      {
        "input": {
          "array": [1, 2, -1],
          "k": 0
        },
        "expected": [[-1, 1]],
        "description": "should return all the pairs that sum to 0"
      },
      {
        "input": {
          "array": [1, 2, -1, -1, -2],
          "k": 1
        },
        "expected": [[-1, 2]],
        "description": "should return all the pairs that sum to 1"
      }
    ]
  },
  "maximum_subarray": {
    "title": "Maximum Subarray",
    "description": "Given an array of integers (positive and negative) find the largest contiguous subsum (sum of a subarray). You can solve this trivially in O(n**2) time by considering all subarrays. Try to solve it in O(n) time with O(1) memory.",
    "complexity": "O(n)",
    "parameters": [
      {
        "name": "array",
        "type": "array<integer>",
        "description": "Array of integers (positive and negative)"
      }
    ],
    "returnType": {
      "javascript": "integer",
      "ruby": "integer",
      "python": "integer"
    },
    "functionSignatures": {
      "javascript": "function maximumSubarray(numbers)",
      "ruby": "def maximum_subarray(array)",
      "python": "def maximum_subarray(array)"
    },
    "testCases": [
      {
        "input": {
          "array": [4, -1, 5, 6, -13, 2]
        },
        "expected": 14,
        "description": "should return the largest subsum"
      },
      {
        "input": {
          "array": [-2, 1, -3, 4, -1, 2, 1, -5, 4]
        },
        "expected": 6,
        "description": "should return the largest subsum"
      }
    ]
  }
}